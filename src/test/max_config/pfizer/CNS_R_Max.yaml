name: CNS_R Max
reference: com.pharbers.ipaas.data.driver.api.job.PhBaseJob
factory: com.pharbers.ipaas.data.driver.api.factory.PhJobFactory
actions:
-   name: joinDataWithEmptyValue
    reference: com.pharbers.ipaas.data.driver.api.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.api.factory.PhActionFactory
    args:
        df: panelSummed
    opers:
    -   name: select
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.SelectOperator
        args:
            inDFName: df
            selects: P_YM as YM#P_PRODUCT_ID as PRODUCT_ID
    -   name: distinctByKey
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DistinctByKeyOperator
        args:
            inDFName: df
            keys: YM#PRODUCT_ID
    -   name:
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.JoinOperator
        args:
            inDFName: df
            joinDFName: universeDF
            joinExpr: TRUE
            joinType: cross
-   name: joinData
    reference: com.pharbers.ipaas.data.driver.api.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.api.factory.PhActionFactory
    args:
        df: joinDataWithEmptyValue
    opers:
    -   name: JoinOperator
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.JoinOperator
        args:
            inDFName: df
            joinDFName: panelSummed
            joinExpr: HOSPITAL_ID == P_HOSPITAL_ID AND YM == P_YM AND PRODUCT_ID == P_PRODUCT_ID
            joinType: left
    -   name: fillNull
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: j_sumSales
        plugin:
            name: FillColumnPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: when sumSales IS NULL THEN 0.0 ELSE sumSales END
    -   name: fillNull
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: j_sumUnits
        plugin:
            name: FillColumnPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: when sumUnits IS NULL THEN 0.0 ELSE sumUnits END
    -   name: drop sumSales
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            drops: sumSales#sumUnits
    -   name: rename j_sumSales to sumSales
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: j_sumSales
            newColName: sumSales
    -   name: rename j_sumUnits to sumUnits
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: j_sumUnits
            newColName: sumUnits
-   name: segmentDF
    reference: com.pharbers.ipaas.data.driver.api.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.api.factory.PhActionFactory
    args:
        df: joinData
    opers:
    -   name:
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.ExprFilterOperator
        args:
            inDFName: df
            exprFilter: NEED_MAX_HOSP == 1
    -   name: group by SEGMENT#PRODUCT_ID#YM sum(sumSales) as s_sumSales,sum(sumUnits) as s_sumUnits,sum(WEST_MEDICINE_INCOME) as s_westMedicineIncome,first(SEGMENT) as SEGMENT, first(PRODUCT_ID) as PRODUCT_ID,first(YM) as YM
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.GroupOperator
        args:
            inDFName: panelData
            groups: SEGMENT#PRODUCT_ID#YM
            aggExprs: sum(sumSales) as s_sumSales,sum(sumUnits) as s_sumUnits,sum(WEST_MEDICINE_INCOME) as s_westMedicineIncome,first(SEGMENT) as SEGMENT, first(PRODUCT_ID) as PRODUCT_ID,first(YM) as YM
    -   name: rename SEGMENT to s_SEGMENT
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: SEGMENT
            newColName: s_SEGMENT
    -   name: rename PRODUCT_ID to s_PRODUCT_ID
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: PRODUCT_ID
            newColName: s_PRODUCT_ID
    -   name: rename YM to s_YM
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: YM
            newColName: s_YM
    -   name: avgSales
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: avg_Sales
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: s_sumSales / s_westMedicineIncome
    -   name: avg_Units
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: avg_Units
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: s_sumUnits / s_westMedicineIncome
    -   name: drop
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            drops: s_sumSales#s_sumUnits#s_westMedicineIncome

-   name: enlargedDF
    reference: com.pharbers.ipaas.data.driver.api.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.api.factory.PhActionFactory
    args:
        df: joinData
    opers:
    -   name: join
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.JoinOperator
        args:
            inDFName: df
            joinDFName: segmentDF
            joinExpr: SEGMENT == s_SEGMENT AND PRODUCT_ID == s_PRODUCT_ID AND YM == s_YM
            joinType: inner
    -   name: dropCol
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            drops: s_SEGMENT#s_PRODUCT_ID#s_YM
    -   name: add column Factor
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: Factor
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when ETC_DOSAGE_NAME like '%粉针剂%' OR ETC_DOSAGE_NAME like '%注射剂%' THEN Factor1 else Factor2 end
    -   name: drop Factor1,Factor2
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            drops: Factor1#Factor2
    -   name: cast String to Int
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: Factor
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: Factor as Double
    -   name: filter factor
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.ExprFilterOperator
        args:
            inDFName: df
            exprFilter: Factor > 0.0
    -   name: addCol f_sales
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: f_sales
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when IS_PANEL_HOSP == 1 then sumSales when avg_Sales <= 0.0 or avg_Units  <= 0.0 then 0.0 else WEST_MEDICINE_INCOME * Factor * avg_Sales  end
    -   name: cast String to Double
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: f_sales
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: f_sales as Double
    -   name: addCol f_units
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: f_units
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when IS_PANEL_HOSP == 1 then sumUnits when avg_Sales <= 0.0 or avg_Units  <= 0.0 then 0.0 else WEST_MEDICINE_INCOME * avg_Units * Factor end
    -   name: cast String to Double
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: f_units
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: f_units as Double
    -   name: drop s_sumSales
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            drops: s_sumSales#s_sumUnits#s_westMedicineIncome
    -   name: filter
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.ExprFilterOperator
        args:
            inDFName: df
            exprFilter: IS_PANEL_HOSP == 0 AND (f_units != 0.0 OR f_sales != 0.0)
    -   name: cast String to Int
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: Date
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: YM as Int
    -   name: select
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.SelectOperator
        args:
            inDFName: df
            selects: Date#HOSPITAL_ID#PRODUCT_ID#f_units#f_sales
-   name: backfillDF
    reference: com.pharbers.ipaas.data.driver.api.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.api.factory.PhActionFactory
    args:
        df: panelSummed
    opers:
    -   name: join
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.JoinOperator
        args:
            inDFName: df
            joinDFName: universeDF
            joinExpr: P_HOSPITAL_ID == HOSPITAL_ID
            joinType: inner
    -   name: addColumn
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: Date
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: YM as Int
    -   name: rename Sales to f_sales
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: Sales
            newColName: f_sales
    -   name: add column Factor
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.AddColumnOperator
        args:
            inDFName: df
            newColName: Factor
        plugin:
            name: ExprPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.ExprPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when ETC_DOSAGE_NAME like '%粉针剂%' OR ETC_DOSAGE_NAME like '%注射剂%' THEN Factor1 else Factor2 end
    -   name: drop Factor1,Factor2
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            drops: Factor1#Factor2
    -   name:
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.WithColumnRenamedOperator
        args:
            inDFName: df
            oldColName: Units
            newColName: f_units
    -   name: select
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.SelectOperator
        args:
            inDFName: df
            selects: Date#HOSPITAL_ID#PRODUCT_ID#f_units#f_sales
-   name: maxResultDF
    reference: com.pharbers.ipaas.data.driver.api.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.api.factory.PhActionFactory
    args:
        df: backfillDF
    opers:
    -   name: union
        factory: com.pharbers.ipaas.data.driver.api.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.UnionOperator
        args:
            inDFName: df
            unionDFName: enlargedDF
