name: pfizerDVPMax
reference: com.pharbers.ipaas.data.driver.job.PhBaseJob
factory: com.pharbers.ipaas.data.driver.factory.PhJobFactory
actions:
-   name: panelDF
    reference: com.pharbers.ipaas.data.driver.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.factory.PhActionFactory
    args:
        df: panelDF
    opers:
    -   name: select panelDF for DVP
        reference: com.pharbers.ipaas.data.driver.operators.select
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        args:
            inDFName: df
            selects: Date#Prod_Name#HOSP_ID#Sales#Units

-   name: universeDF for DVP
    reference: com.pharbers.ipaas.data.driver.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.factory.PhActionFactory
    args:
        null: null
    opers:
    -   name: read universe for DVP
        reference: com.pharbers.ipaas.data.driver.job.PhReadParquetOperator
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        args:
            path: path TODO
    -   name: rename
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.withColumnRenamed
        args:
            inDFName: df
            oldColName: PREFECTURE
            newColName: City
    -   name: rename
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.withColumnRenamed
        args:
            inDFName: df
            oldColName: HOSP_ID
            newColName: HOSP_ID_universe
    -   name: select panelDF for DVP
        reference: com.pharbers.ipaas.data.driver.operators.select
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        args:
            inDFName: df
            selects: Province#City#PHA_HOSP_ID#MARKET

-   name: coefDF
    reference: com.pharbers.ipaas.data.driver.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.factory.PhActionFactory
    args:
        null: null
    opers:
    -   name: read coefDF for DVP
        reference: com.pharbers.ipaas.data.driver.job.PhReadParquetOperator
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        args:
            path: path TODO
    -   name: rename
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.withColumnRenamed
        args:
            inDFName: df
            oldColName: CITY
            newColName: coefCity

-   name: DVPMaxResult
    reference: com.pharbers.ipaas.data.driver.job.PhBaseAction
    factory: com.pharbers.ipaas.data.driver.factory.PhActionFactory
    args:
        df: panelDF
    opers:
    -   name: join
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.JoinOperator
        args:
            inDFName: df
            joinDFName: universeDF
            joinExpr: HOSP_ID == PHA_HOSP_ID
            joinType: inner
    -   name: add column City2
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: City2
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when City == 福州市 then City when City == 珠海市 or City == 东莞市 or City == 中山市 or City == 佛山市 then 珠三角市 else City end
    -   name: join
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.JoinOperator
        args:
            inDFName: df
            joinDFName: coefDF
            joinExpr: City2 == coefCity
            joinType: left
    -   name: add coef
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: coef
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when coef IS NULL then 1.204832714 else coef end
    -   name: add Sales
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: Sales
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when Sales == 0.0 or Units == 0.0 then 0.0 else Sales end
    -   name: add Units
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: Units
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: case when Sales == 0.0 or Units == 0.0 then 0.0 else Units end
    -   name: add f_sales
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: f_sales
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: Sales * coef
    -   name: add f_units
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: f_units
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: Units * coef
    -   name: concant
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: GROUP
        plugin:
            name: concat
            reference: com.pharbers.ipaas.data.driver.plugin.ConcatStrPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                columns: Province,City,Date,Prod_Name,coef,MARKET
                dilimiter: "#"
    -   name: group
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.groupOperator
        args:
            inDFName: df
            groupCol: GROUP
            agg: sum(Sales) as Sales,sum(Units) as Units,sum(f_sales) as f_sales,sum(f_units) as f_units
    -   name: drop
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.DropOperator
        args:
            inDFName: df
            dropColName: GROUP
    -   name: rename Product
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.withColumnRenamed
        args:
            inDFName: df
            oldColName: Prod_Name
            newColName: Product
    -   name: add column Panel_ID
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: Panel_ID
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: 'none'
    -   name: add column Factor
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        reference: com.pharbers.ipaas.data.driver.operators.addColumn
        args:
            inDFName: df
            newColName: Factor
        plugin:
            name: BaseCalcPlugin
            reference: com.pharbers.ipaas.data.driver.plugin.BaseCalcPlugin
            factory: com.pharbers.ipaas.data.driver.factory.PhPluginFactory
            args:
                exprString: 'none'
    -   name: select panelDF for DVP Max result
        reference: com.pharbers.ipaas.data.driver.operators.select
        factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
        args:
            inDFName: df
            selects: Date#Province#City#Panel_ID#Product#Factor#f_sales#f_units#MARKET#coef#Sales#Units

- name: DVPMaxResultDF
  reference: com.pharbers.ipaas.data.driver.job.PhBaseAction
  factory: com.pharbers.ipaas.data.driver.factory.PhActionFactory
  args:
      df: backfillDF
  opers:
  - name: union
    factory: com.pharbers.ipaas.data.driver.factory.PhOperatorFactory
    reference: com.pharbers.ipaas.data.driver.operators.unionOperator
    args:
        inDFName: df
        unionDFName: enlargedDF